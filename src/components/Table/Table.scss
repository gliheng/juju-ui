@import "vars";

.j-table {
  $border: 1px solid var(--j-border-color);
  color: var(--j-text-color);
  text-align: left;
  position: relative;
  &, table {
    border-collapse: collapse;
  }
  &[data-bordered="true"] {
    thead {
      border-top: $border;
    }
    td, th {
      border-right: $border;
    }
    tr {
      border-left: $border;
    }
  }
  // border does not show for sticky positioned cells on firefox
  // we have to use after to put a border inside cell
  // tr {
  //   border-bottom: $border;
  // }
  tr {
    line-height: 2;
  }
  th, td {
    padding: 0 $margin;
    box-sizing: border-box;
    word-break: break-all;
    position: relative;
    &:after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      border-bottom: $border;
    }
  }
  thead {
    tr {
      th {
        background-color: var(--j-background-color-1);
        font-weight: 500;
        .j-table-cell {
          position: relative;
          height: 100%;
          display: flex;
          align-items: stretch;
          box-sizing: border-box;
          margin: 0 (-$margin);
          padding: 0 $margin;
          .j-table-cell-inner {
            flex: 1;
          }
          .j-table-cell-addons {
            display: flex;
            align-items: center;
            .j-table-sorter {
              display: inline-flex;
              vertical-align: middle;
              flex-direction: column;
              > .j-icon {
                --j-icon-size: 12px;
                cursor: pointer;
              }
              > .j-icon[data-on="true"] {
                color: var(--j-primary-color);
              }
            }
            .j-divider {
              position: absolute;
              right: -1px;
              top: 0;
              bottom: 0;
            }
          }
        }
      }
    }
  }
  tbody {
    tr[data-selected="true"] td {
      background-color: var(--j-primary-color-lighter) !important;
    }
  }
  .j-data-table-indent {
    display: inline-block;
  }
}

// style for fixed-header table
.j-table[data-fixed-header="true"] {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  position: relative;
  // Elements below this one has non-zero z-index, this prevent parent to also get elevated
  z-index: 0;
  // max-width: min-content;
  table {
    table-layout: fixed;
    width: 100%;
  }
  > .j-table-head-part {
    max-width: 100%;
    overflow-x: hidden;
  }
  > .j-table-body-part {
    width: 100%;
    overflow: hidden;;
    flex: 1;
    position: relative;
    > .j-scroller {
      --j-scroller-width: 100%;
      --j-scroll-height: 100%;
    }
    .j-scroll-bar {
      z-index: 2;
    }
    .j-table-body-cover {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1;
    }
  }
  .j-table-sticky-shadow {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 30px;
    pointer-events: none;
    --j-table-sticky-shadow-color: rgba(0, 0, 0, .15);
    &.j-left {
      box-shadow: inset 10px 0 8px -8px var(--j-table-sticky-shadow-color);
    }
    &.j-right {
      margin-left: -30px;
      box-shadow: inset -10px 0 8px -8px var(--j-table-sticky-shadow-color);
    }
  }
  .j-table-sticky {
    position: sticky;
    z-index: 1;
  }
  thead {
    th.j-table-sticky {
      background-color: var(--j-background-color-1);
    }
  }
  tbody {
    td.j-table-sticky {
      background-color: var(--j-background-color);
    }
  }
  .j-data-table-group-row {
    .j-icon {
      margin-right: $margin;
    }
  }
  &[data-has-left-sticky="true"] {
    .j-data-table-group-row {
      > td.j-table-sticky {
        position: sticky;
        left: 0;
      }
    }
  }

  &[data-virtual-scroll="true"] {
    tr {
      white-space: nowrap;
      th, td {
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
  }
}
